"user strict";
const ffmpeg = require("fluent-ffmpeg"); // the converter
const ytdl = require("ytdl-core"); // youtube video downloader
//progress = require("progress-stream"); // will use later for progress bar and progress percentages 
const request = require("request");

// youtube API call - kicks off the entire code 
request('https://www.googleapis.com/youtube/v3/videos?part=id%2C+snippet&id=F3CIbk3At_8&key=AIzaSyC-eBlpk6ksj-x9KWdje0nVHBue-U-T5_k',
{json: true}, (error, jsonObject) => {
    if (error) {
        return console.log(error);
    }
    // initialize all variables which are gonna be returned 
    
    //console.log(jsonObject.body.items[0].snippet.title);  
    let fileName = "";
    let songName = "";
    let songThumbnail = "";

    // assign values to the main API object variables
    songName = jsonObject.body.items[0].snippet.title;
    fileName = songName.replace(/\s/g,'') + ".mp3";
    songThumbnail = jsonObject.body.items[0].snippet.thumbnails.default.url;
    
    
    // the main function and it's options when instantiated as an object in express
    function MP3DOWNLOADER(options) {
        this.youtubeBaseUrl = "http://www.youtube.com/watch?v=";
        this.fileSavePath = options.fileSavePath;
        
        if (options.ffmpegPath){
            ffmpeg.setFfmpegPath(options.ffmpegPath);
        };
    };

    // the main function method - takes the video ID as a parameter 
    MP3DOWNLOADER.prototype.download = function(passedVideoID){
        let youtubeFullUrl = this.youtubeBaseUrl + passedVideoID;
        console.log(youtubeFullUrl);
        let returnApiObject = {
            songName : songName,
            fileName : fileName,
            songThumbnail : songThumbnail
        }
        console.log(returnApiObject);
    };

});


/*
// main class
function MP3DOWNLOADER(options) {

    this.youtubeBaseUrl = "http://www.youtube.com/watch?v=";

    this.fileSavePath = options.fileSavePath;

    // set ffmegpath after initialized in express - save the binary on the server
    if (options.ffmpegPath) {
        ffmpeg.setFfmpegPath(options.ffmpegPath);
    }     
};
*/


/*
// the main method - main parameter is a string passed in from the front end, called the videoID
MP3DOWNLOADER.prototype.download = function(videoID){
    
    // make the full URL of the video being downloaded
    var youtubeFullUrl = this.youtubeBaseUrl + videoID;

        ytdl.getInfo(youtubeFullUrl, function(error, info){

            // if it fails to get info about the video - for example user enters wrong link
            if (error) {
                callback(error.message);
            } else {
                
            // download the video with ytdl using the provided info
            var downloadVideoStream = ytdl.downloadFromInfo(info);
                
            // this is where the encoding takes place if I get a response - a string generated by ytdl
            downloadVideoStream.on("response", function(){
                    
                // initiate the main object that will be returned by the API as jsonp
                // this will be used to:
                // both project stuff into the front end and use it here aswell
                var videoInfo = {
                    // fileName - DONE
                    // songName - DONE
                    // songThumbnail - DONE
                    // fileSavePath - get from 
                } 
                
                // initialize the encoder, source being the downloaded video 
                var encoderJob = new ffmpeg({
                    source: downloadVideoStream
                });
                    
                // encoder at work - set the audiocodec and .mp3 format 
                encoderJob.withAudioCodec('libmp3lame');
                encoderJob.toFormat('mp3');
                
                // tracking if an error occurs - maybe video wasnt downloaded, or issues with ffmpeg
                downloadVideoStream.on("error", function(error){
                    callback(error.message);
                });
                
                // in the API(express) this is represented as "finished", which is the next step from this
                downloadVideoStream.on("end", function() {
                    // name of the file saved on your PC
                    // var downloadFileName = use youtube API to get the video title and them .trim() it + "mp3"
                    // videoInfo.fileName = downloadFileName;
                    
                    // videoInfo.songName = need from youtube API

                    // videoInfo.artist = need from youtube API

                    videoID.songThumbnail = "https://img.youtube.com/vi/" + videoID + "/default.jpg"

                    // videoInfo.fileSavePath = this.fileSavePath.trim()
                    callback(videoInfo);
                });
                
                // this is where the actual save is performed
                // downloadVideoStream.saveToFile(videoInfo.fileSavePath);
            });
        }       
    });
}
*/
   

module.exports = {};

